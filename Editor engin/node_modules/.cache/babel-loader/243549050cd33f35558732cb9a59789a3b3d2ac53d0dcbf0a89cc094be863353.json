{"ast":null,"code":"var _jsxFileName = \"/Users/manikranthbheemineni/PlayGround/Editor engin/src/components/Sidebar.jsx\";\nimport React from 'react';\nimport './Sidebar.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Sidebar({\n  addElement,\n  selectedElement,\n  element,\n  updateElement\n}) {\n  const sidebarItems = [{\n    id: 'text',\n    icon: 'T',\n    label: 'Text',\n    action: () => addElement('text')\n  }, {\n    id: 'brand',\n    icon: '👑',\n    label: 'Brand',\n    action: () => console.log('Brand clicked')\n  }, {\n    id: 'uploads',\n    icon: '☁️',\n    label: 'Uploads',\n    action: () => document.getElementById('file-upload').click()\n  }];\n\n  // Get the currently active panel (if any)\n  const getActivePanel = () => {\n    if (!selectedElement) return null;\n    if (element && element.type === 'text') return 'textPanel';\n    if (element && element.type === 'image') return 'imagePanel';\n    return null;\n  };\n  const activePanel = getActivePanel();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sidebar-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sidebar\",\n      children: [sidebarItems.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `sidebar-item ${activePanel === item.id + 'Panel' ? 'active' : ''}`,\n        onClick: item.action,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-icon\",\n          children: item.icon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"sidebar-label\",\n          children: item.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        accept: \"image/*\",\n        style: {\n          display: 'none'\n        },\n        onChange: e => {\n          const file = e.target.files[0];\n          if (file) {\n            const reader = new FileReader();\n            reader.onload = event => {\n              addElement('image', event.target.result);\n            };\n            reader.readAsDataURL(file);\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = Sidebar;\nexport default Sidebar;\nvar _c;\n$RefreshReg$(_c, \"Sidebar\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Sidebar","addElement","selectedElement","element","updateElement","sidebarItems","id","icon","label","action","console","log","document","getElementById","click","getActivePanel","type","activePanel","className","children","map","item","onClick","fileName","_jsxFileName","lineNumber","columnNumber","accept","style","display","onChange","e","file","target","files","reader","FileReader","onload","event","result","readAsDataURL","_c","$RefreshReg$"],"sources":["/Users/manikranthbheemineni/PlayGround/Editor engin/src/components/Sidebar.jsx"],"sourcesContent":["import React from 'react';\nimport './Sidebar.css';\n\nfunction Sidebar({ addElement, selectedElement, element, updateElement }) {\n  const sidebarItems = [\n    { id: 'text', icon: 'T', label: 'Text', action: () => addElement('text') },\n    { id: 'brand', icon: '👑', label: 'Brand', action: () => console.log('Brand clicked') },\n    { id: 'uploads', icon: '☁️', label: 'Uploads', action: () => document.getElementById('file-upload').click() }\n  ];\n\n  // Get the currently active panel (if any)\n  const getActivePanel = () => {\n    if (!selectedElement) return null;\n    if (element && element.type === 'text') return 'textPanel';\n    if (element && element.type === 'image') return 'imagePanel';\n    return null;\n  };\n\n  const activePanel = getActivePanel();\n  \n  return (\n    <div className=\"sidebar-container\">\n      <div className=\"sidebar\">\n        {sidebarItems.map(item => (\n          <div \n            key={item.id}\n            className={`sidebar-item ${activePanel === item.id + 'Panel' ? 'active' : ''}`}\n            onClick={item.action}\n          >\n            <div className=\"sidebar-icon\">\n              {item.icon}\n            </div>\n            <div className=\"sidebar-label\">{item.label}</div>\n          </div>\n        ))}\n        \n        {/* Hidden file input for uploads */}\n        <input\n          id=\"file-upload\"\n          type=\"file\"\n          accept=\"image/*\"\n          style={{ display: 'none' }}\n          onChange={(e) => {\n            const file = e.target.files[0];\n            if (file) {\n              const reader = new FileReader();\n              reader.onload = (event) => {\n                addElement('image', event.target.result);\n              };\n              reader.readAsDataURL(file);\n            }\n          }}\n        />\n      </div>\n      \n      {/* This is where ElementProperties would be rendered when an element is selected */}\n    </div>\n  );\n}\n\nexport default Sidebar; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}