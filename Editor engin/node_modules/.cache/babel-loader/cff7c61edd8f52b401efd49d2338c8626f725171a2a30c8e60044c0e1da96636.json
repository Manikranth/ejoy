{"ast":null,"code":"var _jsxFileName = \"/Users/manikranthbheemineni/PlayGround/Editor engin/src/components/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef, useEffect, useState } from 'react';\nimport Element from './Element';\nimport './Canvas.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Canvas({\n  elements,\n  selectedElement,\n  setSelectedElement,\n  updateElement,\n  deleteElement,\n  isPreviewMode,\n  addElement,\n  getDefaultStyle\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const canvasContainerRef = useRef(null);\n  const [canvasBounds, setCanvasBounds] = useState({\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0\n  });\n  const [canvasSize, setCanvasSize] = useState({\n    width: 0,\n    height: 0\n  });\n  const [rulers, setRulers] = useState({\n    horizontal: [],\n    vertical: []\n  });\n\n  // Calculate and update canvas boundaries when component mounts or window resizes\n  useEffect(() => {\n    const updateCanvasBounds = () => {\n      if (canvasRef.current && canvasContainerRef.current) {\n        const rect = canvasRef.current.getBoundingClientRect();\n\n        // Get the sidebar width to determine canvas effective width\n        const propertiesPanel = document.querySelector('.element-properties');\n        const sidebarWidth = propertiesPanel ? propertiesPanel.getBoundingClientRect().width : 300;\n\n        // Set bounds\n        setCanvasBounds({\n          left: 30,\n          // Account for the ruler width\n          right: window.innerWidth - sidebarWidth,\n          top: 30,\n          // Account for the ruler height\n          bottom: Math.max(2000, window.innerHeight * 2) // Allow for a very tall canvas\n        });\n\n        // Update canvas size\n        setCanvasSize({\n          width: window.innerWidth - sidebarWidth - 30,\n          height: Math.max(2000, window.innerHeight * 2) - 30\n        });\n\n        // Generate ruler marks\n        generateRulers(window.innerWidth - sidebarWidth - 30, Math.max(2000, window.innerHeight * 2) - 30);\n      }\n    };\n    const generateRulers = (width, height) => {\n      // Create horizontal ruler markers (every 100px with major marks every 500px)\n      const horizontal = [];\n      for (let i = 0; i <= width; i += 50) {\n        horizontal.push({\n          position: i,\n          isMajor: i % 100 === 0\n        });\n      }\n\n      // Create vertical ruler markers\n      const vertical = [];\n      for (let i = 0; i <= height; i += 50) {\n        vertical.push({\n          position: i,\n          isMajor: i % 100 === 0\n        });\n      }\n      setRulers({\n        horizontal,\n        vertical\n      });\n    };\n    updateCanvasBounds();\n    window.addEventListener('resize', updateCanvasBounds);\n\n    // Create a MutationObserver to detect DOM changes\n    const observer = new MutationObserver(updateCanvasBounds);\n    observer.observe(document.body, {\n      childList: true,\n      subtree: true,\n      attributes: true,\n      attributeFilter: ['style', 'class']\n    });\n    return () => {\n      window.removeEventListener('resize', updateCanvasBounds);\n      observer.disconnect();\n    };\n  }, []);\n  const handleCanvasClick = e => {\n    // Deselect when clicking on the canvas background\n    if (e.target === e.currentTarget && !isPreviewMode) {\n      setSelectedElement(null);\n    }\n  };\n\n  // This function enforces element boundaries\n  const enforceElementBoundaries = (id, newPosition, elementWidth, elementHeight) => {\n    // Apply constraints\n    return {\n      x: Math.max(30, Math.min(newPosition.x, canvasBounds.right - 30 - elementWidth)),\n      y: Math.max(30, Math.min(newPosition.y, canvasBounds.bottom - elementHeight))\n    };\n  };\n  const handleElementDrag = (id, position, elementWidth, elementHeight) => {\n    if (!isPreviewMode) {\n      // Get constrained position\n      const constrainedPosition = enforceElementBoundaries(id, position, elementWidth, elementHeight);\n      updateElement(id, {\n        position: constrainedPosition\n      });\n    }\n  };\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    if (isPreviewMode) return;\n\n    // Get drop position relative to canvas accounting for rulers\n    const rect = canvasRef.current.getBoundingClientRect();\n    const scrollTop = canvasContainerRef.current.scrollTop;\n    const scrollLeft = canvasContainerRef.current.scrollLeft;\n    const position = {\n      x: e.clientX - rect.left + scrollLeft,\n      y: e.clientY - rect.top + scrollTop\n    };\n\n    // Check if files were dropped\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const file = e.dataTransfer.files[0];\n\n      // Check if it's an image\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = event => {\n          // Create a new image element\n          const newElement = {\n            id: `element-${Date.now()}`,\n            type: 'image',\n            content: event.target.result,\n            style: getDefaultStyle('image'),\n            position: position\n          };\n          addElement(newElement);\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n  }, [isPreviewMode, addElement, getDefaultStyle]);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"canvas-container\",\n    ref: canvasContainerRef,\n    children: [!isPreviewMode && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"horizontal-ruler\",\n        children: rulers.horizontal.map((mark, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ruler-mark ${mark.isMajor ? 'major' : 'minor'}`,\n          style: {\n            left: `${mark.position}px`\n          },\n          children: mark.isMajor && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ruler-label\",\n            children: mark.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 34\n          }, this)\n        }, `h-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"vertical-ruler\",\n        children: rulers.vertical.map((mark, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `ruler-mark ${mark.isMajor ? 'major' : 'minor'}`,\n          style: {\n            top: `${mark.position}px`\n          },\n          children: mark.isMajor && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"ruler-label\",\n            children: mark.position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 34\n          }, this)\n        }, `v-${index}`, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: canvasRef,\n      className: `canvas ${isPreviewMode ? 'preview-mode' : ''}`,\n      style: {\n        width: canvasSize.width,\n        height: canvasSize.height\n      },\n      onClick: handleCanvasClick,\n      onDrop: handleDrop,\n      onDragOver: handleDragOver,\n      children: [!isPreviewMode && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page-boundary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), elements.map(element => /*#__PURE__*/_jsxDEV(Element, {\n        element: element,\n        isSelected: element.id === selectedElement,\n        onSelect: setSelectedElement,\n        onUpdate: (id, updates, isNew = false) => {\n          if (isNew) {\n            // This is for adding a duplicated element\n            addElement(updates);\n          } else {\n            // Normal update\n            updateElement(id, updates);\n          }\n        },\n        onDelete: deleteElement,\n        isPreviewMode: isPreviewMode,\n        canvasBounds: canvasBounds\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"c6N6aCEiSwPE9A/foI9rm/vlnuc=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useCallback","useRef","useEffect","useState","Element","jsxDEV","_jsxDEV","Fragment","_Fragment","Canvas","elements","selectedElement","setSelectedElement","updateElement","deleteElement","isPreviewMode","addElement","getDefaultStyle","_s","canvasRef","canvasContainerRef","canvasBounds","setCanvasBounds","left","right","top","bottom","canvasSize","setCanvasSize","width","height","rulers","setRulers","horizontal","vertical","updateCanvasBounds","current","rect","getBoundingClientRect","propertiesPanel","document","querySelector","sidebarWidth","window","innerWidth","Math","max","innerHeight","generateRulers","i","push","position","isMajor","addEventListener","observer","MutationObserver","observe","body","childList","subtree","attributes","attributeFilter","removeEventListener","disconnect","handleCanvasClick","e","target","currentTarget","enforceElementBoundaries","id","newPosition","elementWidth","elementHeight","x","min","y","handleElementDrag","constrainedPosition","handleDrop","preventDefault","scrollTop","scrollLeft","clientX","clientY","dataTransfer","files","length","file","type","startsWith","reader","FileReader","onload","event","newElement","Date","now","content","result","style","readAsDataURL","handleDragOver","className","ref","children","map","mark","index","fileName","_jsxFileName","lineNumber","columnNumber","onClick","onDrop","onDragOver","element","isSelected","onSelect","onUpdate","updates","isNew","onDelete","_c","$RefreshReg$"],"sources":["/Users/manikranthbheemineni/PlayGround/Editor engin/src/components/Canvas.jsx"],"sourcesContent":["import React, { useCallback, useRef, useEffect, useState } from 'react';\nimport Element from './Element';\nimport './Canvas.css';\n\nfunction Canvas({ elements, selectedElement, setSelectedElement, updateElement, deleteElement, isPreviewMode, addElement, getDefaultStyle }) {\n  const canvasRef = useRef(null);\n  const canvasContainerRef = useRef(null);\n  const [canvasBounds, setCanvasBounds] = useState({ left: 0, right: 0, top: 0, bottom: 0 });\n  const [canvasSize, setCanvasSize] = useState({ width: 0, height: 0 });\n  const [rulers, setRulers] = useState({ horizontal: [], vertical: [] });\n  \n  // Calculate and update canvas boundaries when component mounts or window resizes\n  useEffect(() => {\n    const updateCanvasBounds = () => {\n      if (canvasRef.current && canvasContainerRef.current) {\n        const rect = canvasRef.current.getBoundingClientRect();\n        \n        // Get the sidebar width to determine canvas effective width\n        const propertiesPanel = document.querySelector('.element-properties');\n        const sidebarWidth = propertiesPanel ? propertiesPanel.getBoundingClientRect().width : 300;\n        \n        // Set bounds\n        setCanvasBounds({\n          left: 30, // Account for the ruler width\n          right: window.innerWidth - sidebarWidth,\n          top: 30, // Account for the ruler height\n          bottom: Math.max(2000, window.innerHeight * 2) // Allow for a very tall canvas\n        });\n        \n        // Update canvas size\n        setCanvasSize({\n          width: window.innerWidth - sidebarWidth - 30,\n          height: Math.max(2000, window.innerHeight * 2) - 30\n        });\n        \n        // Generate ruler marks\n        generateRulers(window.innerWidth - sidebarWidth - 30, Math.max(2000, window.innerHeight * 2) - 30);\n      }\n    };\n    \n    const generateRulers = (width, height) => {\n      // Create horizontal ruler markers (every 100px with major marks every 500px)\n      const horizontal = [];\n      for (let i = 0; i <= width; i += 50) {\n        horizontal.push({\n          position: i,\n          isMajor: i % 100 === 0\n        });\n      }\n      \n      // Create vertical ruler markers\n      const vertical = [];\n      for (let i = 0; i <= height; i += 50) {\n        vertical.push({\n          position: i,\n          isMajor: i % 100 === 0\n        });\n      }\n      \n      setRulers({ horizontal, vertical });\n    };\n    \n    updateCanvasBounds();\n    \n    window.addEventListener('resize', updateCanvasBounds);\n    \n    // Create a MutationObserver to detect DOM changes\n    const observer = new MutationObserver(updateCanvasBounds);\n    observer.observe(document.body, { \n      childList: true, \n      subtree: true,\n      attributes: true,\n      attributeFilter: ['style', 'class']\n    });\n    \n    return () => {\n      window.removeEventListener('resize', updateCanvasBounds);\n      observer.disconnect();\n    };\n  }, []);\n  \n  const handleCanvasClick = (e) => {\n    // Deselect when clicking on the canvas background\n    if (e.target === e.currentTarget && !isPreviewMode) {\n      setSelectedElement(null);\n    }\n  };\n  \n  // This function enforces element boundaries\n  const enforceElementBoundaries = (id, newPosition, elementWidth, elementHeight) => {\n    // Apply constraints\n    return {\n      x: Math.max(30, Math.min(newPosition.x, canvasBounds.right - 30 - elementWidth)),\n      y: Math.max(30, Math.min(newPosition.y, canvasBounds.bottom - elementHeight))\n    };\n  };\n  \n  const handleElementDrag = (id, position, elementWidth, elementHeight) => {\n    if (!isPreviewMode) {\n      // Get constrained position\n      const constrainedPosition = enforceElementBoundaries(id, position, elementWidth, elementHeight);\n      updateElement(id, { position: constrainedPosition });\n    }\n  };\n  \n  const handleDrop = useCallback((e) => {\n    e.preventDefault();\n    if (isPreviewMode) return;\n    \n    // Get drop position relative to canvas accounting for rulers\n    const rect = canvasRef.current.getBoundingClientRect();\n    const scrollTop = canvasContainerRef.current.scrollTop;\n    const scrollLeft = canvasContainerRef.current.scrollLeft;\n    \n    const position = {\n      x: e.clientX - rect.left + scrollLeft,\n      y: e.clientY - rect.top + scrollTop\n    };\n    \n    // Check if files were dropped\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const file = e.dataTransfer.files[0];\n      \n      // Check if it's an image\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          // Create a new image element\n          const newElement = {\n            id: `element-${Date.now()}`,\n            type: 'image',\n            content: event.target.result,\n            style: getDefaultStyle('image'),\n            position: position\n          };\n          addElement(newElement);\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n  }, [isPreviewMode, addElement, getDefaultStyle]);\n  \n  const handleDragOver = useCallback((e) => {\n    e.preventDefault();\n  }, []);\n  \n  return (\n    <div className=\"canvas-container\" ref={canvasContainerRef}>\n      {!isPreviewMode && (\n        <>\n          <div className=\"horizontal-ruler\">\n            {rulers.horizontal.map((mark, index) => (\n              <div \n                key={`h-${index}`}\n                className={`ruler-mark ${mark.isMajor ? 'major' : 'minor'}`}\n                style={{ left: `${mark.position}px` }}\n              >\n                {mark.isMajor && <span className=\"ruler-label\">{mark.position}</span>}\n              </div>\n            ))}\n          </div>\n          <div className=\"vertical-ruler\">\n            {rulers.vertical.map((mark, index) => (\n              <div \n                key={`v-${index}`}\n                className={`ruler-mark ${mark.isMajor ? 'major' : 'minor'}`}\n                style={{ top: `${mark.position}px` }}\n              >\n                {mark.isMajor && <span className=\"ruler-label\">{mark.position}</span>}\n              </div>\n            ))}\n          </div>\n        </>\n      )}\n      \n      <div \n        ref={canvasRef}\n        className={`canvas ${isPreviewMode ? 'preview-mode' : ''}`} \n        style={{\n          width: canvasSize.width,\n          height: canvasSize.height\n        }}\n        onClick={handleCanvasClick}\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n      >\n        {/* Page boundary indicator - only in edit mode */}\n        {!isPreviewMode && (\n          <div className=\"page-boundary\"></div>\n        )}\n        \n        {elements.map(element => (\n          <Element\n            key={element.id}\n            element={element}\n            isSelected={element.id === selectedElement}\n            onSelect={setSelectedElement}\n            onUpdate={(id, updates, isNew = false) => {\n              if (isNew) {\n                // This is for adding a duplicated element\n                addElement(updates);\n              } else {\n                // Normal update\n                updateElement(id, updates);\n              }\n            }}\n            onDelete={deleteElement}\n            isPreviewMode={isPreviewMode}\n            canvasBounds={canvasBounds}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Canvas; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}