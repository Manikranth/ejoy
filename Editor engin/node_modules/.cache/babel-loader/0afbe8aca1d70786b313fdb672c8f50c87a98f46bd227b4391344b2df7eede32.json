{"ast":null,"code":"var _jsxFileName = \"/Users/manikranthbheemineni/PlayGround/Editor engin/src/components/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from 'react';\nimport Element from './Element';\nimport './Canvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas({\n  elements,\n  selectedElement,\n  setSelectedElement,\n  updateElement,\n  deleteElement,\n  isPreviewMode,\n  addElement,\n  getDefaultStyle\n}) {\n  _s();\n  const handleCanvasClick = e => {\n    // Deselect when clicking on the canvas background\n    if (e.target === e.currentTarget && !isPreviewMode) {\n      setSelectedElement(null);\n    }\n  };\n  const handleElementClick = elementId => {\n    if (!isPreviewMode) {\n      setSelectedElement(elementId);\n    }\n  };\n  const handleElementDoubleClick = elementId => {\n    // We can add additional behavior for double-click here if needed\n    // For now, the Element component handles text editing on double-click\n  };\n  const handleElementDrag = (id, position) => {\n    if (!isPreviewMode) {\n      updateElement(id, {\n        position\n      });\n    }\n  };\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    if (isPreviewMode) return;\n\n    // Get drop position\n    const rect = e.currentTarget.getBoundingClientRect();\n    const position = {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n\n    // Check if files were dropped\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const file = e.dataTransfer.files[0];\n\n      // Check if it's an image\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = event => {\n          // Create a new image element\n          const newElement = {\n            id: `element-${Date.now()}`,\n            type: 'image',\n            content: event.target.result,\n            style: getDefaultStyle('image'),\n            position: position\n          };\n          addElement(newElement);\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n  }, [isPreviewMode, addElement, getDefaultStyle]);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  const renderElement = element => {\n    return /*#__PURE__*/_jsxDEV(Element, {\n      element: element,\n      selected: element.id === selectedElement,\n      onClick: handleElementClick,\n      onDoubleClick: handleElementDoubleClick,\n      updateElement: updateElement,\n      deleteElement: deleteElement,\n      isPreviewMode: isPreviewMode\n    }, element.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `canvas ${isPreviewMode ? 'preview-mode' : ''}`,\n    onClick: handleCanvasClick,\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    children: elements.map(renderElement)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"3SIRUJcVOp3fu2gsbHgDFfMWChU=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useCallback","Element","jsxDEV","_jsxDEV","Canvas","elements","selectedElement","setSelectedElement","updateElement","deleteElement","isPreviewMode","addElement","getDefaultStyle","_s","handleCanvasClick","e","target","currentTarget","handleElementClick","elementId","handleElementDoubleClick","handleElementDrag","id","position","handleDrop","preventDefault","rect","getBoundingClientRect","x","clientX","left","y","clientY","top","dataTransfer","files","length","file","type","startsWith","reader","FileReader","onload","event","newElement","Date","now","content","result","style","readAsDataURL","handleDragOver","renderElement","element","selected","onClick","onDoubleClick","fileName","_jsxFileName","lineNumber","columnNumber","className","onDrop","onDragOver","children","map","_c","$RefreshReg$"],"sources":["/Users/manikranthbheemineni/PlayGround/Editor engin/src/components/Canvas.jsx"],"sourcesContent":["import React, { useCallback } from 'react';\nimport Element from './Element';\nimport './Canvas.css';\n\nfunction Canvas({ elements, selectedElement, setSelectedElement, updateElement, deleteElement, isPreviewMode, addElement, getDefaultStyle }) {\n  const handleCanvasClick = (e) => {\n    // Deselect when clicking on the canvas background\n    if (e.target === e.currentTarget && !isPreviewMode) {\n      setSelectedElement(null);\n    }\n  };\n  \n  const handleElementClick = (elementId) => {\n    if (!isPreviewMode) {\n      setSelectedElement(elementId);\n    }\n  };\n  \n  const handleElementDoubleClick = (elementId) => {\n    // We can add additional behavior for double-click here if needed\n    // For now, the Element component handles text editing on double-click\n  };\n  \n  const handleElementDrag = (id, position) => {\n    if (!isPreviewMode) {\n      updateElement(id, { position });\n    }\n  };\n  \n  const handleDrop = useCallback((e) => {\n    e.preventDefault();\n    if (isPreviewMode) return;\n    \n    // Get drop position\n    const rect = e.currentTarget.getBoundingClientRect();\n    const position = {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n    \n    // Check if files were dropped\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const file = e.dataTransfer.files[0];\n      \n      // Check if it's an image\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          // Create a new image element\n          const newElement = {\n            id: `element-${Date.now()}`,\n            type: 'image',\n            content: event.target.result,\n            style: getDefaultStyle('image'),\n            position: position\n          };\n          addElement(newElement);\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n  }, [isPreviewMode, addElement, getDefaultStyle]);\n  \n  const handleDragOver = useCallback((e) => {\n    e.preventDefault();\n  }, []);\n  \n  const renderElement = (element) => {\n    return (\n      <Element\n        key={element.id}\n        element={element}\n        selected={element.id === selectedElement}\n        onClick={handleElementClick}\n        onDoubleClick={handleElementDoubleClick}\n        updateElement={updateElement}\n        deleteElement={deleteElement}\n        isPreviewMode={isPreviewMode}\n      />\n    );\n  };\n  \n  return (\n    <div \n      className={`canvas ${isPreviewMode ? 'preview-mode' : ''}`} \n      onClick={handleCanvasClick}\n      onDrop={handleDrop}\n      onDragOver={handleDragOver}\n    >\n      {elements.map(renderElement)}\n    </div>\n  );\n}\n\nexport default Canvas; "],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,OAAO,MAAM,WAAW;AAC/B,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,SAASC,MAAMA,CAAC;EAAEC,QAAQ;EAAEC,eAAe;EAAEC,kBAAkB;EAAEC,aAAa;EAAEC,aAAa;EAAEC,aAAa;EAAEC,UAAU;EAAEC;AAAgB,CAAC,EAAE;EAAAC,EAAA;EAC3I,MAAMC,iBAAiB,GAAIC,CAAC,IAAK;IAC/B;IACA,IAAIA,CAAC,CAACC,MAAM,KAAKD,CAAC,CAACE,aAAa,IAAI,CAACP,aAAa,EAAE;MAClDH,kBAAkB,CAAC,IAAI,CAAC;IAC1B;EACF,CAAC;EAED,MAAMW,kBAAkB,GAAIC,SAAS,IAAK;IACxC,IAAI,CAACT,aAAa,EAAE;MAClBH,kBAAkB,CAACY,SAAS,CAAC;IAC/B;EACF,CAAC;EAED,MAAMC,wBAAwB,GAAID,SAAS,IAAK;IAC9C;IACA;EAAA,CACD;EAED,MAAME,iBAAiB,GAAGA,CAACC,EAAE,EAAEC,QAAQ,KAAK;IAC1C,IAAI,CAACb,aAAa,EAAE;MAClBF,aAAa,CAACc,EAAE,EAAE;QAAEC;MAAS,CAAC,CAAC;IACjC;EACF,CAAC;EAED,MAAMC,UAAU,GAAGxB,WAAW,CAAEe,CAAC,IAAK;IACpCA,CAAC,CAACU,cAAc,CAAC,CAAC;IAClB,IAAIf,aAAa,EAAE;;IAEnB;IACA,MAAMgB,IAAI,GAAGX,CAAC,CAACE,aAAa,CAACU,qBAAqB,CAAC,CAAC;IACpD,MAAMJ,QAAQ,GAAG;MACfK,CAAC,EAAEb,CAAC,CAACc,OAAO,GAAGH,IAAI,CAACI,IAAI;MACxBC,CAAC,EAAEhB,CAAC,CAACiB,OAAO,GAAGN,IAAI,CAACO;IACtB,CAAC;;IAED;IACA,IAAIlB,CAAC,CAACmB,YAAY,CAACC,KAAK,IAAIpB,CAAC,CAACmB,YAAY,CAACC,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;MAC3D,MAAMC,IAAI,GAAGtB,CAAC,CAACmB,YAAY,CAACC,KAAK,CAAC,CAAC,CAAC;;MAEpC;MACA,IAAIE,IAAI,CAACC,IAAI,CAACC,UAAU,CAAC,QAAQ,CAAC,EAAE;QAClC,MAAMC,MAAM,GAAG,IAAIC,UAAU,CAAC,CAAC;QAC/BD,MAAM,CAACE,MAAM,GAAIC,KAAK,IAAK;UACzB;UACA,MAAMC,UAAU,GAAG;YACjBtB,EAAE,EAAE,WAAWuB,IAAI,CAACC,GAAG,CAAC,CAAC,EAAE;YAC3BR,IAAI,EAAE,OAAO;YACbS,OAAO,EAAEJ,KAAK,CAAC3B,MAAM,CAACgC,MAAM;YAC5BC,KAAK,EAAErC,eAAe,CAAC,OAAO,CAAC;YAC/BW,QAAQ,EAAEA;UACZ,CAAC;UACDZ,UAAU,CAACiC,UAAU,CAAC;QACxB,CAAC;QACDJ,MAAM,CAACU,aAAa,CAACb,IAAI,CAAC;MAC5B;IACF;EACF,CAAC,EAAE,CAAC3B,aAAa,EAAEC,UAAU,EAAEC,eAAe,CAAC,CAAC;EAEhD,MAAMuC,cAAc,GAAGnD,WAAW,CAAEe,CAAC,IAAK;IACxCA,CAAC,CAACU,cAAc,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM2B,aAAa,GAAIC,OAAO,IAAK;IACjC,oBACElD,OAAA,CAACF,OAAO;MAENoD,OAAO,EAAEA,OAAQ;MACjBC,QAAQ,EAAED,OAAO,CAAC/B,EAAE,KAAKhB,eAAgB;MACzCiD,OAAO,EAAErC,kBAAmB;MAC5BsC,aAAa,EAAEpC,wBAAyB;MACxCZ,aAAa,EAAEA,aAAc;MAC7BC,aAAa,EAAEA,aAAc;MAC7BC,aAAa,EAAEA;IAAc,GAPxB2C,OAAO,CAAC/B,EAAE;MAAAmC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAQhB,CAAC;EAEN,CAAC;EAED,oBACEzD,OAAA;IACE0D,SAAS,EAAE,UAAUnD,aAAa,GAAG,cAAc,GAAG,EAAE,EAAG;IAC3D6C,OAAO,EAAEzC,iBAAkB;IAC3BgD,MAAM,EAAEtC,UAAW;IACnBuC,UAAU,EAAEZ,cAAe;IAAAa,QAAA,EAE1B3D,QAAQ,CAAC4D,GAAG,CAACb,aAAa;EAAC;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACzB,CAAC;AAEV;AAAC/C,EAAA,CAxFQT,MAAM;AAAA8D,EAAA,GAAN9D,MAAM;AA0Ff,eAAeA,MAAM;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}