{"ast":null,"code":"var _jsxFileName = \"/Users/manikranthbheemineni/PlayGround/Editor engin/src/components/Canvas.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useRef, useEffect, useState } from 'react';\nimport Element from './Element';\nimport './Canvas.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Canvas({\n  elements,\n  selectedElement,\n  setSelectedElement,\n  updateElement,\n  deleteElement,\n  isPreviewMode,\n  addElement,\n  getDefaultStyle\n}) {\n  _s();\n  const canvasRef = useRef(null);\n  const [canvasBounds, setCanvasBounds] = useState({\n    left: 0,\n    top: 0,\n    right: 0,\n    bottom: 0,\n    width: 0,\n    height: 0\n  });\n\n  // Get the canvas boundaries on mount and window resize\n  useEffect(() => {\n    const updateCanvasBounds = () => {\n      if (canvasRef.current) {\n        const rect = canvasRef.current.getBoundingClientRect();\n        setCanvasBounds({\n          left: rect.left,\n          top: rect.top,\n          right: rect.right,\n          bottom: rect.bottom,\n          width: rect.width,\n          height: rect.height\n        });\n      }\n    };\n    updateCanvasBounds();\n    window.addEventListener('resize', updateCanvasBounds);\n    return () => window.removeEventListener('resize', updateCanvasBounds);\n  }, []);\n  const handleCanvasClick = e => {\n    // Deselect when clicking on the canvas background\n    if (e.target === e.currentTarget && !isPreviewMode) {\n      setSelectedElement(null);\n    }\n  };\n  const constrainPosition = position => {\n    // Calculate constraints - elements should stay within canvas bounds\n    let x = position.x;\n    let y = position.y;\n\n    // Add padding to ensure elements don't get placed right at the edge\n    const padding = 5;\n\n    // Keep elements within the canvas bounds\n    x = Math.max(padding, Math.min(x, canvasBounds.width - padding));\n    y = Math.max(padding, Math.min(y, canvasBounds.height - padding));\n    return {\n      x,\n      y\n    };\n  };\n  const handleDrop = useCallback(e => {\n    e.preventDefault();\n    if (isPreviewMode) return;\n\n    // Get drop position relative to canvas\n    const rect = e.currentTarget.getBoundingClientRect();\n    const position = {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n\n    // Constrain position to canvas boundaries\n    const constrainedPosition = constrainPosition(position);\n\n    // Check if files were dropped\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const file = e.dataTransfer.files[0];\n\n      // Check if it's an image\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = event => {\n          // Create a new image element\n          const newElement = {\n            id: `element-${Date.now()}`,\n            type: 'image',\n            content: event.target.result,\n            style: getDefaultStyle('image'),\n            position: constrainedPosition\n          };\n          addElement(newElement);\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n  }, [isPreviewMode, addElement, getDefaultStyle, canvasBounds]);\n  const handleDragOver = useCallback(e => {\n    e.preventDefault();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: canvasRef,\n    className: `canvas ${isPreviewMode ? 'preview-mode' : ''}`,\n    onClick: handleCanvasClick,\n    onDrop: handleDrop,\n    onDragOver: handleDragOver,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"canvas-boundary\",\n      children: elements.map(element => /*#__PURE__*/_jsxDEV(Element, {\n        element: element,\n        isSelected: element.id === selectedElement,\n        onSelect: setSelectedElement,\n        onUpdate: (id, updates, isNew = false) => {\n          // For position updates, constrain to canvas boundaries\n          if (updates.position) {\n            updates.position = constrainPosition(updates.position);\n          }\n          if (isNew) {\n            // This is for adding a duplicated element\n            if (updates.position) {\n              updates.position = constrainPosition(updates.position);\n            }\n            addElement(updates);\n          } else {\n            // Normal update\n            updateElement(id, updates);\n          }\n        },\n        onDelete: deleteElement,\n        isPreviewMode: isPreviewMode,\n        canvasBounds: canvasBounds\n      }, element.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n_s(Canvas, \"8LFdOlrodWL+YTqngTXx6r5RdTY=\");\n_c = Canvas;\nexport default Canvas;\nvar _c;\n$RefreshReg$(_c, \"Canvas\");","map":{"version":3,"names":["React","useCallback","useRef","useEffect","useState","Element","jsxDEV","_jsxDEV","Canvas","elements","selectedElement","setSelectedElement","updateElement","deleteElement","isPreviewMode","addElement","getDefaultStyle","_s","canvasRef","canvasBounds","setCanvasBounds","left","top","right","bottom","width","height","updateCanvasBounds","current","rect","getBoundingClientRect","window","addEventListener","removeEventListener","handleCanvasClick","e","target","currentTarget","constrainPosition","position","x","y","padding","Math","max","min","handleDrop","preventDefault","clientX","clientY","constrainedPosition","dataTransfer","files","length","file","type","startsWith","reader","FileReader","onload","event","newElement","id","Date","now","content","result","style","readAsDataURL","handleDragOver","ref","className","onClick","onDrop","onDragOver","children","map","element","isSelected","onSelect","onUpdate","updates","isNew","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/manikranthbheemineni/PlayGround/Editor engin/src/components/Canvas.jsx"],"sourcesContent":["import React, { useCallback, useRef, useEffect, useState } from 'react';\nimport Element from './Element';\nimport './Canvas.css';\n\nfunction Canvas({ elements, selectedElement, setSelectedElement, updateElement, deleteElement, isPreviewMode, addElement, getDefaultStyle }) {\n  const canvasRef = useRef(null);\n  const [canvasBounds, setCanvasBounds] = useState({ left: 0, top: 0, right: 0, bottom: 0, width: 0, height: 0 });\n  \n  // Get the canvas boundaries on mount and window resize\n  useEffect(() => {\n    const updateCanvasBounds = () => {\n      if (canvasRef.current) {\n        const rect = canvasRef.current.getBoundingClientRect();\n        setCanvasBounds({\n          left: rect.left,\n          top: rect.top,\n          right: rect.right,\n          bottom: rect.bottom,\n          width: rect.width,\n          height: rect.height\n        });\n      }\n    };\n    \n    updateCanvasBounds();\n    window.addEventListener('resize', updateCanvasBounds);\n    return () => window.removeEventListener('resize', updateCanvasBounds);\n  }, []);\n  \n  const handleCanvasClick = (e) => {\n    // Deselect when clicking on the canvas background\n    if (e.target === e.currentTarget && !isPreviewMode) {\n      setSelectedElement(null);\n    }\n  };\n  \n  const constrainPosition = (position) => {\n    // Calculate constraints - elements should stay within canvas bounds\n    let x = position.x;\n    let y = position.y;\n    \n    // Add padding to ensure elements don't get placed right at the edge\n    const padding = 5;\n    \n    // Keep elements within the canvas bounds\n    x = Math.max(padding, Math.min(x, canvasBounds.width - padding));\n    y = Math.max(padding, Math.min(y, canvasBounds.height - padding));\n    \n    return { x, y };\n  };\n  \n  const handleDrop = useCallback((e) => {\n    e.preventDefault();\n    if (isPreviewMode) return;\n    \n    // Get drop position relative to canvas\n    const rect = e.currentTarget.getBoundingClientRect();\n    const position = {\n      x: e.clientX - rect.left,\n      y: e.clientY - rect.top\n    };\n    \n    // Constrain position to canvas boundaries\n    const constrainedPosition = constrainPosition(position);\n    \n    // Check if files were dropped\n    if (e.dataTransfer.files && e.dataTransfer.files.length > 0) {\n      const file = e.dataTransfer.files[0];\n      \n      // Check if it's an image\n      if (file.type.startsWith('image/')) {\n        const reader = new FileReader();\n        reader.onload = (event) => {\n          // Create a new image element\n          const newElement = {\n            id: `element-${Date.now()}`,\n            type: 'image',\n            content: event.target.result,\n            style: getDefaultStyle('image'),\n            position: constrainedPosition\n          };\n          addElement(newElement);\n        };\n        reader.readAsDataURL(file);\n      }\n    }\n  }, [isPreviewMode, addElement, getDefaultStyle, canvasBounds]);\n  \n  const handleDragOver = useCallback((e) => {\n    e.preventDefault();\n  }, []);\n  \n  return (\n    <div \n      ref={canvasRef}\n      className={`canvas ${isPreviewMode ? 'preview-mode' : ''}`} \n      onClick={handleCanvasClick}\n      onDrop={handleDrop}\n      onDragOver={handleDragOver}\n    >\n      <div className=\"canvas-boundary\">\n        {elements.map(element => (\n          <Element\n            key={element.id}\n            element={element}\n            isSelected={element.id === selectedElement}\n            onSelect={setSelectedElement}\n            onUpdate={(id, updates, isNew = false) => {\n              // For position updates, constrain to canvas boundaries\n              if (updates.position) {\n                updates.position = constrainPosition(updates.position);\n              }\n              \n              if (isNew) {\n                // This is for adding a duplicated element\n                if (updates.position) {\n                  updates.position = constrainPosition(updates.position);\n                }\n                addElement(updates);\n              } else {\n                // Normal update\n                updateElement(id, updates);\n              }\n            }}\n            onDelete={deleteElement}\n            isPreviewMode={isPreviewMode}\n            canvasBounds={canvasBounds}\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default Canvas; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}