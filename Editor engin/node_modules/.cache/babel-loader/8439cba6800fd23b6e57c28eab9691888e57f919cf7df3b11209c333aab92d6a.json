{"ast":null,"code":"var _jsxFileName = \"/Users/manikranthbheemineni/PlayGround/Editor engin/src/App.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Canvas from './components/Canvas';\nimport ElementProperties from './components/ElementProperties';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [elements, setElements] = useState([]);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  const addElement = elementType => {\n    const newElement = {\n      id: `element-${Date.now()}`,\n      type: elementType,\n      content: getDefaultContent(elementType),\n      style: getDefaultStyle(elementType),\n      position: {\n        x: 50,\n        y: 50\n      }\n    };\n    setElements([...elements, newElement]);\n    setSelectedElement(newElement.id);\n  };\n  const updateElement = (id, updates) => {\n    setElements(elements.map(el => el.id === id ? {\n      ...el,\n      ...updates\n    } : el));\n  };\n  const deleteElement = id => {\n    setElements(elements.filter(el => el.id !== id));\n    if (selectedElement === id) setSelectedElement(null);\n  };\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n    if (!isPreviewMode) {\n      // Entering preview mode, deselect any element\n      setSelectedElement(null);\n    }\n  };\n  const addCustomElement = elementData => {\n    setElements([...elements, elementData]);\n    setSelectedElement(elementData.id);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"app-container\",\n    children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n      addElement: addElement,\n      isPreviewMode: isPreviewMode,\n      setIsPreviewMode: setIsPreviewMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"canvas-container\",\n        children: /*#__PURE__*/_jsxDEV(Canvas, {\n          elements: elements,\n          selectedElement: selectedElement,\n          setSelectedElement: setSelectedElement,\n          updateElement: updateElement,\n          deleteElement: deleteElement,\n          isPreviewMode: isPreviewMode,\n          addElement: addElement,\n          getDefaultStyle: getDefaultStyle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), selectedElement && !isPreviewMode && /*#__PURE__*/_jsxDEV(ElementProperties, {\n      element: elements.find(el => el.id === selectedElement),\n      updateElement: updateElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n// Helper functions\n_s(App, \"YqsQp+1jnlHZVVvv5ipw79tOcLo=\");\n_c = App;\nfunction getDefaultContent(type) {\n  switch (type) {\n    case 'text':\n      return 'Edit this text';\n    case 'heading':\n      return 'Heading';\n    case 'button':\n      return 'Click Me';\n    default:\n      return '';\n  }\n}\nfunction getDefaultStyle(type) {\n  // Default styling based on element type\n  const baseStyle = {\n    width: '300px',\n    height: 'auto'\n  };\n  switch (type) {\n    case 'text':\n      return {\n        ...baseStyle,\n        fontSize: '16px',\n        color: '#333',\n        fontFamily: 'Arial',\n        lineHeight: '1.5',\n        letterSpacing: '0px',\n        textAlign: 'left'\n      };\n    case 'image':\n      return {\n        ...baseStyle,\n        objectFit: 'contain'\n      };\n    case 'video':\n      return {\n        ...baseStyle,\n        width: '320px',\n        height: '240px'\n      };\n    default:\n      return baseStyle;\n  }\n}\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Sidebar","Canvas","ElementProperties","jsxDEV","_jsxDEV","App","_s","elements","setElements","selectedElement","setSelectedElement","isPreviewMode","setIsPreviewMode","addElement","elementType","newElement","id","Date","now","type","content","getDefaultContent","style","getDefaultStyle","position","x","y","updateElement","updates","map","el","deleteElement","filter","togglePreviewMode","addCustomElement","elementData","className","children","fileName","_jsxFileName","lineNumber","columnNumber","element","find","_c","baseStyle","width","height","fontSize","color","fontFamily","lineHeight","letterSpacing","textAlign","objectFit","$RefreshReg$"],"sources":["/Users/manikranthbheemineni/PlayGround/Editor engin/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Sidebar from './components/Sidebar';\nimport Canvas from './components/Canvas';\nimport ElementProperties from './components/ElementProperties';\nimport './App.css';\n\nfunction App() {\n  const [elements, setElements] = useState([]);\n  const [selectedElement, setSelectedElement] = useState(null);\n  const [isPreviewMode, setIsPreviewMode] = useState(false);\n  \n  const addElement = (elementType) => {\n    const newElement = {\n      id: `element-${Date.now()}`,\n      type: elementType,\n      content: getDefaultContent(elementType),\n      style: getDefaultStyle(elementType),\n      position: { x: 50, y: 50 }\n    };\n    \n    setElements([...elements, newElement]);\n    setSelectedElement(newElement.id);\n  };\n  \n  const updateElement = (id, updates) => {\n    setElements(elements.map(el => \n      el.id === id ? { ...el, ...updates } : el\n    ));\n  };\n  \n  const deleteElement = (id) => {\n    setElements(elements.filter(el => el.id !== id));\n    if (selectedElement === id) setSelectedElement(null);\n  };\n\n  const togglePreviewMode = () => {\n    setIsPreviewMode(!isPreviewMode);\n    if (!isPreviewMode) {\n      // Entering preview mode, deselect any element\n      setSelectedElement(null);\n    }\n  };\n  \n  const addCustomElement = (elementData) => {\n    setElements([...elements, elementData]);\n    setSelectedElement(elementData.id);\n  };\n  \n  return (\n    <div className=\"app-container\">\n      <Sidebar\n        addElement={addElement}\n        isPreviewMode={isPreviewMode}\n        setIsPreviewMode={setIsPreviewMode}\n      />\n      \n      <div className=\"main-content\">\n        <div className=\"canvas-container\">\n          <Canvas\n            elements={elements}\n            selectedElement={selectedElement}\n            setSelectedElement={setSelectedElement}\n            updateElement={updateElement}\n            deleteElement={deleteElement}\n            isPreviewMode={isPreviewMode}\n            addElement={addElement}\n            getDefaultStyle={getDefaultStyle}\n          />\n        </div>\n      </div>\n      \n      {selectedElement && !isPreviewMode && (\n        <ElementProperties\n          element={elements.find(el => el.id === selectedElement)}\n          updateElement={updateElement}\n        />\n      )}\n    </div>\n  );\n}\n\n// Helper functions\nfunction getDefaultContent(type) {\n  switch(type) {\n    case 'text': return 'Edit this text';\n    case 'heading': return 'Heading';\n    case 'button': return 'Click Me';\n    default: return '';\n  }\n}\n\nfunction getDefaultStyle(type) {\n  // Default styling based on element type\n  const baseStyle = { \n    width: '300px',\n    height: 'auto'\n  };\n  \n  switch(type) {\n    case 'text': \n      return { \n        ...baseStyle,\n        fontSize: '16px',\n        color: '#333',\n        fontFamily: 'Arial',\n        lineHeight: '1.5',\n        letterSpacing: '0px',\n        textAlign: 'left'\n      };\n    case 'image':\n      return {\n        ...baseStyle,\n        objectFit: 'contain'\n      };\n    case 'video':\n      return {\n        ...baseStyle,\n        width: '320px',\n        height: '240px'\n      };\n    default: return baseStyle;\n  }\n}\n\nexport default App; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}