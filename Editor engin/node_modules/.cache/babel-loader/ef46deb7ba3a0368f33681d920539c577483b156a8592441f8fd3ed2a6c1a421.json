{"ast":null,"code":"var _jsxFileName = \"/Users/manikranthbheemineni/PlayGround/Editor engin/src/components/Element.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport './Element.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Element({\n  element,\n  selected,\n  onClick,\n  onDoubleClick,\n  onDragStart,\n  onDragEnd,\n  updateElement,\n  deleteElement,\n  isPreviewMode\n}) {\n  _s();\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState(element.position);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editableContent, setEditableContent] = useState(element.content);\n  const elementRef = useRef(null);\n  const editableRef = useRef(null);\n\n  // Reset position when element changes\n  useEffect(() => {\n    setPosition(element.position);\n  }, [element.position]);\n\n  // Focus editable content when entering edit mode\n  useEffect(() => {\n    if (isEditing && editableRef.current) {\n      editableRef.current.focus();\n    }\n  }, [isEditing]);\n  const handleMouseDown = e => {\n    if (isPreviewMode || isEditing) return;\n\n    // Don't start drag operation if clicking on a resize or rotate handle\n    if (e.target.className.includes('handle')) return;\n    e.stopPropagation();\n    setIsDragging(true);\n\n    // Store initial cursor and element positions\n    const startX = e.clientX;\n    const startY = e.clientY;\n    const startLeft = position.x;\n    const startTop = position.y;\n    const handleMouseMove = moveEvent => {\n      const dx = moveEvent.clientX - startX;\n      const dy = moveEvent.clientY - startY;\n      const newPosition = {\n        x: startLeft + dx,\n        y: startTop + dy\n      };\n      setPosition(newPosition);\n    };\n    const handleMouseUp = () => {\n      setIsDragging(false);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n\n      // Update the element position in the parent state\n      updateElement(element.id, {\n        position: position\n      });\n    };\n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    onClick(element.id);\n  };\n  const handleDoubleClick = e => {\n    if (isPreviewMode) return;\n    if (element.type === 'text') {\n      e.stopPropagation();\n      setIsEditing(true);\n    }\n    onDoubleClick && onDoubleClick(element.id);\n  };\n  const handleTextChange = e => {\n    setEditableContent(e.target.innerText);\n  };\n  const handleBlur = () => {\n    setIsEditing(false);\n    updateElement(element.id, {\n      content: editableContent\n    });\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter' && e.shiftKey === false) {\n      e.preventDefault();\n      setIsEditing(false);\n      updateElement(element.id, {\n        content: editableContent\n      });\n    }\n  };\n  const handleDelete = e => {\n    e.stopPropagation();\n    deleteElement(element.id);\n  };\n  const handleRotate = e => {\n    // Rotation logic would go here\n    e.stopPropagation();\n  };\n  const renderControls = () => {\n    if (!selected || isPreviewMode) return null;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"resize-handles\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"handle top-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"handle top-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"handle bottom-left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"handle bottom-right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"rotate-handle\",\n        onClick: handleRotate,\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"24\",\n          height: \"24\",\n          viewBox: \"0 0 24 24\",\n          fill: \"none\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            d: \"M12 5V1L7 6L12 11V7C15.31 7 18 9.69 18 13C18 16.31 15.31 19 12 19C8.69 19 6 16.31 6 13H4C4 17.42 7.58 21 12 21C16.42 21 20 17.42 20 13C20 8.58 16.42 5 12 5Z\",\n            fill: \"black\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  };\n  let elementContent;\n\n  // Render appropriate content based on element type\n  switch (element.type) {\n    case 'text':\n      elementContent = isEditing ? /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: editableRef,\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onInput: handleTextChange,\n        onBlur: handleBlur,\n        onKeyDown: handleKeyDown,\n        className: \"editable-text\",\n        style: element.style,\n        dangerouslySetInnerHTML: {\n          __html: editableContent\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: element.style,\n        children: element.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this);\n      break;\n    case 'image':\n      elementContent = /*#__PURE__*/_jsxDEV(\"img\", {\n        src: element.content,\n        alt: \"\",\n        style: element.style\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 24\n      }, this);\n      break;\n    case 'video':\n      elementContent = /*#__PURE__*/_jsxDEV(\"video\", {\n        controls: isPreviewMode,\n        style: element.style,\n        src: element.content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this);\n      break;\n    default:\n      elementContent = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Unknown element type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 24\n      }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: elementRef,\n    className: `element ${selected ? 'selected' : ''} ${isDragging ? 'dragging' : ''} ${element.type}-element`,\n    style: {\n      position: 'absolute',\n      left: `${position.x}px`,\n      top: `${position.y}px`,\n      cursor: isPreviewMode ? 'default' : isDragging ? 'grabbing' : 'grab'\n    },\n    onMouseDown: handleMouseDown,\n    onDoubleClick: handleDoubleClick,\n    children: [elementContent, renderControls()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n_s(Element, \"eDr17cVK/91p3IWCZd4if3K1IcE=\");\n_c = Element;\nexport default Element;\nvar _c;\n$RefreshReg$(_c, \"Element\");","map":{"version":3,"names":["React","useState","useRef","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Element","element","selected","onClick","onDoubleClick","onDragStart","onDragEnd","updateElement","deleteElement","isPreviewMode","_s","isDragging","setIsDragging","position","setPosition","isEditing","setIsEditing","editableContent","setEditableContent","content","elementRef","editableRef","current","focus","handleMouseDown","e","target","className","includes","stopPropagation","startX","clientX","startY","clientY","startLeft","x","startTop","y","handleMouseMove","moveEvent","dx","dy","newPosition","handleMouseUp","document","removeEventListener","id","addEventListener","handleDoubleClick","type","handleTextChange","innerText","handleBlur","handleKeyDown","key","shiftKey","preventDefault","handleDelete","handleRotate","renderControls","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","viewBox","fill","xmlns","d","elementContent","ref","contentEditable","suppressContentEditableWarning","onInput","onBlur","onKeyDown","style","dangerouslySetInnerHTML","__html","src","alt","controls","left","top","cursor","onMouseDown","_c","$RefreshReg$"],"sources":["/Users/manikranthbheemineni/PlayGround/Editor engin/src/components/Element.jsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport './Element.css';\n\nfunction Element({ element, selected, onClick, onDoubleClick, onDragStart, onDragEnd, updateElement, deleteElement, isPreviewMode }) {\n  const [isDragging, setIsDragging] = useState(false);\n  const [position, setPosition] = useState(element.position);\n  const [isEditing, setIsEditing] = useState(false);\n  const [editableContent, setEditableContent] = useState(element.content);\n  const elementRef = useRef(null);\n  const editableRef = useRef(null);\n  \n  // Reset position when element changes\n  useEffect(() => {\n    setPosition(element.position);\n  }, [element.position]);\n  \n  // Focus editable content when entering edit mode\n  useEffect(() => {\n    if (isEditing && editableRef.current) {\n      editableRef.current.focus();\n    }\n  }, [isEditing]);\n  \n  const handleMouseDown = (e) => {\n    if (isPreviewMode || isEditing) return;\n    \n    // Don't start drag operation if clicking on a resize or rotate handle\n    if (e.target.className.includes('handle')) return;\n    \n    e.stopPropagation();\n    setIsDragging(true);\n    \n    // Store initial cursor and element positions\n    const startX = e.clientX;\n    const startY = e.clientY;\n    const startLeft = position.x;\n    const startTop = position.y;\n    \n    const handleMouseMove = (moveEvent) => {\n      const dx = moveEvent.clientX - startX;\n      const dy = moveEvent.clientY - startY;\n      \n      const newPosition = {\n        x: startLeft + dx,\n        y: startTop + dy\n      };\n      \n      setPosition(newPosition);\n    };\n    \n    const handleMouseUp = () => {\n      setIsDragging(false);\n      document.removeEventListener('mousemove', handleMouseMove);\n      document.removeEventListener('mouseup', handleMouseUp);\n      \n      // Update the element position in the parent state\n      updateElement(element.id, { position: position });\n    };\n    \n    document.addEventListener('mousemove', handleMouseMove);\n    document.addEventListener('mouseup', handleMouseUp);\n    \n    onClick(element.id);\n  };\n  \n  const handleDoubleClick = (e) => {\n    if (isPreviewMode) return;\n    if (element.type === 'text') {\n      e.stopPropagation();\n      setIsEditing(true);\n    }\n    onDoubleClick && onDoubleClick(element.id);\n  };\n  \n  const handleTextChange = (e) => {\n    setEditableContent(e.target.innerText);\n  };\n  \n  const handleBlur = () => {\n    setIsEditing(false);\n    updateElement(element.id, { content: editableContent });\n  };\n  \n  const handleKeyDown = (e) => {\n    if (e.key === 'Enter' && e.shiftKey === false) {\n      e.preventDefault();\n      setIsEditing(false);\n      updateElement(element.id, { content: editableContent });\n    }\n  };\n  \n  const handleDelete = (e) => {\n    e.stopPropagation();\n    deleteElement(element.id);\n  };\n  \n  const handleRotate = (e) => {\n    // Rotation logic would go here\n    e.stopPropagation();\n  };\n  \n  const renderControls = () => {\n    if (!selected || isPreviewMode) return null;\n    \n    return (\n      <>\n        <div className=\"resize-handles\">\n          <div className=\"handle top-left\" />\n          <div className=\"handle top-right\" />\n          <div className=\"handle bottom-left\" />\n          <div className=\"handle bottom-right\" />\n        </div>\n        <div className=\"rotate-handle\" onClick={handleRotate}>\n          <svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path d=\"M12 5V1L7 6L12 11V7C15.31 7 18 9.69 18 13C18 16.31 15.31 19 12 19C8.69 19 6 16.31 6 13H4C4 17.42 7.58 21 12 21C16.42 21 20 17.42 20 13C20 8.58 16.42 5 12 5Z\" fill=\"black\"/>\n          </svg>\n        </div>\n      </>\n    );\n  };\n  \n  let elementContent;\n  \n  // Render appropriate content based on element type\n  switch(element.type) {\n    case 'text':\n      elementContent = isEditing ? (\n        <div \n          ref={editableRef}\n          contentEditable={true}\n          suppressContentEditableWarning={true}\n          onInput={handleTextChange}\n          onBlur={handleBlur}\n          onKeyDown={handleKeyDown}\n          className=\"editable-text\"\n          style={element.style}\n          dangerouslySetInnerHTML={{ __html: editableContent }}\n        />\n      ) : (\n        <div style={element.style}>{element.content}</div>\n      );\n      break;\n      \n    case 'image':\n      elementContent = <img src={element.content} alt=\"\" style={element.style} />;\n      break;\n      \n    case 'video':\n      elementContent = (\n        <video \n          controls={isPreviewMode} \n          style={element.style} \n          src={element.content} \n        />\n      );\n      break;\n      \n    default:\n      elementContent = <div>Unknown element type</div>;\n  }\n  \n  return (\n    <div\n      ref={elementRef}\n      className={`element ${selected ? 'selected' : ''} ${isDragging ? 'dragging' : ''} ${element.type}-element`}\n      style={{\n        position: 'absolute',\n        left: `${position.x}px`,\n        top: `${position.y}px`,\n        cursor: isPreviewMode ? 'default' : isDragging ? 'grabbing' : 'grab'\n      }}\n      onMouseDown={handleMouseDown}\n      onDoubleClick={handleDoubleClick}\n    >\n      {elementContent}\n      {renderControls()}\n    </div>\n  );\n}\n\nexport default Element; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}